enq(val) matches {event:'func_pre',name:'enqueue',args:[val]};
deq(val) matches  {event:'func_post',name:'dequeue',res:val};
deq matches deq(_);
relevant matches enq(_) | deq;

// works only for deterministic shuffle with left-to-right strategy
Main=relevant>>{let val; enq(val) ((deq>>deq(val) all)/\(deq|Main))}?; 

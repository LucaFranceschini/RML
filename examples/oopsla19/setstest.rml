// sets as extension of exclusive access to multiple resources
// works with traces generated from sets.js

acquire(el) matches {event:'func_post',name:'insert',args:[el],res:true};
release(el) matches 
    {event:'func_post',name:'remove',args:[el],res:true};
use(el) matches
    {event:'func_post',name:'insert', args:[el], res:false};
toCheck(el) matches acquire(el) | release(el) | no_rm(el);
no_rm(el) matches {event:'func_post',name:'remove',args:[el],res:false};
no_rm matches no_rm(_);
relevant matches toCheck(_) | use(_); 

Main = relevant >> (no_rm* {let el; acquire(el) ((Main | use(el)* release(el)) /\ toCheck(el) >> (release(el) all))})?;
